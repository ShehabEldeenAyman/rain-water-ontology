@prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl:  <http://www.w3.org/2002/07/owl#> .
@prefix ex:   <http://example.org#> .
@prefix xsd:  <http://www.w3.org/2001/XMLSchema#> .

# Reference to the ontology file
ex:ShapeOntology
    a owl:Ontology ;
    owl:imports <https://shehabeldeenayman.github.io/rain_water_ontology.ttl> .
###########################################################
# Shape to enforce structure of RainWater instances
ex:RainWaterShape a sh:NodeShape ;
    sh:targetClass ex:RainWater ;

    # Constraint for including Storage
    sh:property [
        sh:path ex:Has ;
        sh:class ex:Storage ;
        sh:minCount 1 ;
        sh:message "Each RainWater instance must have at least one Storage."
    ] ;

    # Constraint for including Reuse
    sh:property [
        sh:path ex:Has ;
        sh:class ex:Reuse ;
        sh:minCount 1 ;
        sh:message "Each RainWater instance must have at least one Reuse."
    ] ;

    # Constraint for including Collection
    sh:property [
        sh:path ex:Has ;
        sh:class ex:Collection ;
        sh:minCount 1 ;
        sh:message "Each RainWater instance must have at least one Collection."
    ] ;

    # Constraint for including Treatment
    sh:property [
        sh:path ex:Has ;
        sh:class ex:Treatment ;
        sh:minCount 1 ;
        sh:message "Each RainWater instance must have at least one Treatment."
    ] ;

    # Constraint for including Monitoring
    sh:property [
        sh:path ex:Has ;
        sh:class ex:Monitoring ;
        sh:minCount 1 ;
        sh:message "Each RainWater instance must have at least one Monitoring."
    ] ;

    # Constraint for including Distribution
    sh:property [
        sh:path ex:Has ;
        sh:class ex:Distribution ;
        sh:minCount 1 ;
        sh:message "Each RainWater instance must have at least one Distribution."
    ] .
###########################################################
# Shape for Storage class
ex:StorageShape
    a sh:NodeShape ;
    sh:targetClass ex:Storage ;
    sh:property [
        sh:path ex:Has ;
        sh:class ex:StorageTank ;
        sh:minCount 1 ;
        sh:message "At least one StorageTank is required for each Storage instance." ;
    ] .

# Shape for StorageTank class
ex:StorageTankShape
    a sh:NodeShape ;
    sh:targetClass ex:StorageTank ;
    sh:property [
        sh:path ex:Has ;
        sh:class ex:OverflowMechanism ;
        sh:minCount 1 ;
        sh:message "At least one OverflowMechanism is required for each StorageTank instance." ;
    ] .
###########################################################
# Shape to enforce the structure of Reuse instances
ex:ReuseShape a sh:NodeShape ;
    sh:targetClass ex:Reuse ;
    
    # Constraint for at least one NonPottable designation
    sh:property [
        sh:path ex:DesignatedFor ;
        sh:class ex:NonPottable ;
        sh:minCount 1 ;
        sh:message "Each Reuse instance must be designated for at least one NonPottable use."
    ] ;
    
    # Constraint for at least one Irrigation use
    sh:property [
        sh:path ex:UsedFor ;
        sh:class ex:Irrigation ;
        sh:minCount 1 ;
        sh:message "Each Reuse instance must be used for at least one Irrigation purpose."
    ] .
###########################################################
# Shape to enforce the structure of Collection instances
ex:CollectionShape a sh:NodeShape ;
    sh:targetClass ex:Collection ;
    
    # Constraint for at least one CatchmentArea
    sh:property [
        sh:path ex:InstalledOn ;
        sh:class ex:CatchmentArea ;
        sh:minCount 1 ;
        sh:message "Each Collection instance must be installed on at least one CatchmentArea."
    ] ;
    
    # Constraint for at least one collection method
    sh:property [
        sh:path ex:CollectedBy ;
        sh:or ( 
            [ sh:class ex:RainBarrel ] 
            [ sh:class ex:Gutter ] 
            [ sh:class ex:Downspout ]
        ) ;
        sh:minCount 1 ;
        sh:message "Each Collection instance must be collected by at least one of RainBarrel, Gutter, or Downspout."
    ] .
###########################################################
# Shape to enforce structure of Treatment instances
ex:TreatmentShape a sh:NodeShape ;
    sh:targetClass ex:Treatment ;
    
    # Constraint for including Sedimentation
    sh:property [
        sh:path ex:includes ;
        sh:class ex:Sedimentation ;
        sh:minCount 1 ;
        sh:message "Each Treatment instance must include at least one Sedimentation."
    ] ;
    
    # Constraint for including FiltrationSystem
    sh:property [
        sh:path ex:FilteredBy ;
        sh:class ex:FiltrationSystem ;
        sh:minCount 1 ;
        sh:message "Each Treatment instance must be filtered by at least one FiltrationSystem."
    ] ;

    # Constraint for including DisinfectionSystem
    sh:property [
        sh:path ex:DisinfectedBy ;
        sh:class ex:DisinfectionSystem ;
        sh:minCount 1 ;
        sh:message "Each Treatment instance must be disinfected by at least one DisinfectionSystem."
    ] .
###########################################################
# Shape to enforce structure of Distribution instances
ex:DistributionShape a sh:NodeShape ;
    sh:targetClass ex:Distribution ;
    
    # Constraint for including DistributionPipe
    sh:property [
        sh:path ex:Has ;
        sh:class ex:DistributionPipe ;
        sh:minCount 1 ;
        sh:message "Each Distribution instance must have at least one DistributionPipe."
    ] ;
    
    # Constraint for including PumpSystem
    sh:property [
        sh:path ex:Has ;
        sh:class ex:PumpSystem ;
        sh:minCount 1 ;
        sh:message "Each Distribution instance must have at least one PumpSystem."
    ] ;

    # Constraint for including ControlValve
    sh:property [
        sh:path ex:Has ;
        sh:class ex:ControlValve ;
        sh:minCount 1 ;
        sh:message "Each Distribution instance must have at least one ControlValve."
    ] .
###########################################################
ex:MonitoringShape a sh:NodeShape ;
    sh:targetClass ex:Monitoring ;
    sh:property [
        sh:path ex:Has ;
        sh:class ex:WaterQualitySensor ;
        sh:minCount 1 ;
        sh:message "Monitoring must have at least one WaterQualitySensor."
    ] ;
 sh:property [
        sh:path ex:Has ;
        sh:class ex:Sampling ;
        sh:minCount 1 ;
        sh:message "Monitoring must have at least one Sampling process."
    ] .

ex:WaterQualitySensorShape a sh:NodeShape ;
    sh:targetClass ex:WaterQualitySensor ;
    sh:property [
        sh:path ex:hasReading ;
        sh:datatype xsd:float ;
        sh:minCount 1 ;
        sh:message "WaterQualitySensor readings must be a float value."
    ] .

    ex:SalinityShape a sh:NodeShape ;
    sh:targetClass ex:Salinity ;
    sh:node ex:WaterQualitySensorShape ;
    sh:property [
        sh:path ex:hasReading ;
        sh:datatype xsd:float ;
        sh:message "Salinity must have a reading as a float value."
    ] .

    ex:TemperatureShape a sh:NodeShape ;
    sh:targetClass ex:Temperature ;
    sh:node ex:WaterQualitySensorShape ;
    sh:property [
        sh:path ex:hasReading ;
        sh:datatype xsd:float ;
        sh:message "Temperature must have a reading as a float value."
    ] .

ex:TransparencyShape a sh:NodeShape ;
    sh:targetClass ex:Transparency ;
    sh:node ex:WaterQualitySensorShape ;
    sh:property [
        sh:path ex:hasReading ;
        sh:datatype xsd:float ;
        sh:message "Transparency must have a reading as a float value."
    ] .

ex:DissolvedOxygenShape a sh:NodeShape ;
    sh:targetClass ex:DissolvedOxygen ;
    sh:node ex:WaterQualitySensorShape ;
    sh:property [
        sh:path ex:hasReading ;
        sh:datatype xsd:float ;
        sh:message "Dissolved Oxygen must have a reading as a float value."
    ] .

ex:AmmoniumShape a sh:NodeShape ;
    sh:targetClass ex:Ammonium ;
    sh:node ex:WaterQualitySensorShape ;
    sh:property [
        sh:path ex:hasReading ;
        sh:datatype xsd:float ;
        sh:message "Ammonium must have a reading as a float value."
    ] .

ex:NitrateNitriteShape a sh:NodeShape ;
    sh:targetClass ex:NitrateNitrite ;
    sh:node ex:WaterQualitySensorShape ;
    sh:property [
        sh:path ex:hasReading ;
        sh:datatype xsd:float ;
        sh:message "NitrateNitrite must have a reading as a float value."
    ] .

ex:TotalNitrogenShape a sh:NodeShape ;
    sh:targetClass ex:TotalNitrogen ;
    sh:node ex:WaterQualitySensorShape ;
    sh:property [
        sh:path ex:hasReading ;
        sh:datatype xsd:float ;
        sh:message "Total Nitrogen must have a reading as a float value."
    ] .

ex:PhosphateShape a sh:NodeShape ;
    sh:targetClass ex:Phosphate ;
    sh:node ex:WaterQualitySensorShape ;
    sh:property [
        sh:path ex:hasReading ;
        sh:datatype xsd:float ;
        sh:message "Phosphate must have a reading as a float value."
    ] .

ex:TotalPhosphorusShape a sh:NodeShape ;
    sh:targetClass ex:TotalPhosphorus ;
    sh:node ex:WaterQualitySensorShape ;
    sh:property [
        sh:path ex:hasReading ;
        sh:datatype xsd:float ;
        sh:message "Total Phosphorus must have a reading as a float value."
    ] .

ex:DissolvedSilicaShape a sh:NodeShape ;
    sh:targetClass ex:DissolvedSilica ;
    sh:node ex:WaterQualitySensorShape ;
    sh:property [
        sh:path ex:hasReading ;
        sh:datatype xsd:float ;
        sh:message "Dissolved Silica must have a reading as a float value."
    ] .

ex:TotalOrganicCarbonShape a sh:NodeShape ;
    sh:targetClass ex:TotalOrganicCarbon ;
    sh:node ex:WaterQualitySensorShape ;
    sh:property [
        sh:path ex:hasReading ;
        sh:datatype xsd:float ;
        sh:message "Total Organic Carbon must have a reading as a float value."
    ] .

ex:ParticulateOrganicCarbonShape a sh:NodeShape ;
    sh:targetClass ex:ParticulateOrganicCarbon ;
    sh:node ex:WaterQualitySensorShape ;
    sh:property [
        sh:path ex:hasReading ;
        sh:datatype xsd:float ;
        sh:message "Particulate Organic Carbon must have a reading as a float value."
    ] .